{"name":"PSRC Queue","tagline":"The meta-platform for managing your long-running simulation models","body":"PSRC Queue\r\n===============\r\n\r\nPSRC Queue is a modeling \"meta\" platform. That means you plug your own model into it — any model will do — and Queue allows you to set up, start, and manage your model runs. \r\n\r\nQueue can spawn long-running models on your local network servers, and will email you when the run dies or completes successfully. Soon, Queue will also work seamlessly with EC2 and other cloud resources. \r\n\r\nAll model inputs are archived to ensure trivial reproducibility of any past model run. If your model auto-generates summary stats or visualizations, those can be linked directly and viewed from the Queue dashboard.\r\n\r\nQueue includes a web app to centrally launch and manage model runs, and a simple script for worker nodes that allows those nodes to listen for job requests and do Queue's bidding. If you're accustomed to running models locally from a black box command window, you can still do that too: your run details can get pushed to Queue's central database so everything can be tracked whether you use the web interface or not.\r\n\r\nFully buzzword-enabled:\r\n* Queue's web-app front end is Python-based [Django](https://www.djangoproject.com/). \r\n* The inter-machine communication uses Python Remote Objects, [Pyro4](https://pythonhosted.org/Pyro4/). \r\n* Git and specifically [git-fat](https://github.com/jedbrown/git-fat) for archiving all model inputs, even supporting large files\r\n\r\n*We need your love and your contributions (in code or ideas) to make Queue bulletproof and more feature-rich.*\r\n\r\n**OK I'm in!** Take me to the [PSRC Queue documentation](https://github.com/psrc/queue/wiki).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}